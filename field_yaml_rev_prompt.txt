The point of this task is to (possibly) revise some yaml data.  This data describes a field and all the buildings and other structures and objects on it.  It may include architectural details but also various other types of details and secrets.  This is in the context of a text-based game where the user has the power to create and move structures and objects, sort of like a super-powered architect.  I am going to give you two main pieces of information: the user's most recent USER_INPUT and the game's most recent GAME_RESPONSE to this input.

I want you to do one of two things.  If the yaml of the room should change (for instance, if the description should note that a glass is broken because the player broke it, if there is a new object b), please revise the yaml. If nothing should change, please simply reply "!SAME!" (all caps, and make sure that there are exclamation points on either side because my program will look for this string).


====

# MAKING THINGS


Users may make objects and structures.  However, they may enter into dialogue with another AI in which that AI will coach them to make their descriptions more specific.  So, for instance, the user may say "Make a house." and the ai may say "where is the house, exactly?"  They may go back and forth.  Don't actually make a new structure or object and record it in the YAML until you see the phrase **BUILD SUCCESSFUL**.

**BUILD SUCCESSFUL** is a cue to update the yaml to include the most recently made thing. 


====

# SECRETS

Certain things in this world are secrets.  A structure may have a secret_description and so may any object. These things also have public_descriptions, which is what is not-secret, not-latent.  The public_description is what is obvious to immediate observation.  The secret_description is what can only be discovered by some effort, such as closer inspection or some other action that would trigger the revealing of the secret.  For instance, here is what the yaml looks like:

The field is the topmost entity in this data structure; it contains structures and (perhaps) objects

field:
  objects:[]
  structures:
    - name: small barn
      public_description: "A barn with a table covered with books."
      location: "northwest corner of field"
      secret_description: "Any speech in this room is translated into Italian."
      connections: 
        - name: small barn
          type: dirt path        
      objects:
        - name: old table
          public_description: "An old, rickety wooden table."
          location: "near the back of the room"
          secret_description: none

That was just an example.  If the user says they are making a structure or an object, do your best to make 


====

# PICKING UP OBJECTS

Users may pick up or otherwise move objects; if they take up (for instance) a key that is sitting on a desk, this means that they have it and it is no longer *there* (e.g. in the structure ) so you should remove it from the yaml description of the structure. 

====

Here is the previous yaml of the field and its structures and objects:

<<field_yaml>>



Here is the most recent history of the conversation.  This information could be useful, since it may include the user's elaborations of a structure or object they are building:

<<history>>



Here is the USER_INPUT:

<<user_input>>



Here is the GAME_RESPONSE (remember that **BUILD SUCCESSFUL** is your cue to change the yaml):

<<llm_response>>


Ok, now your turn: please either return the revised yaml (if it seems like the yaml should be revised) or "!SAME!" (if nothing really has changed).